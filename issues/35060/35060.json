{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I've rewritten .InnerText, .WriteTo() and .CloseNode() to use iterative rather than recursive algorithms to improve the stability of HAP when parsing untrusted code. I've attached the patch we're using. It's based against 1.3.0 (which is what we're using). I can work on porting those changes to tip if you'd be willing to accept them, but as you can see if you look at the patch the changes are quite extensive.\n\nHere are some tests (written using nunit) that trigger the crashes we were experiencing:\n\n```\nprivate void CrashTest(Action action) {\n\tvar aspNetStackSize = 256 * 1000;\n\tvar thread = new Thread(() => action(), aspNetStackSize);\n\tthread.Start();\n\tthread.Join();\n}\n\n[Test]\npublic void Test_Unclosed_Nodes_Do_Not_Stackoverflow_Even_If_The_Dom_Is_Deep() {\n\tvar spans = Enumerable.Repeat(\"<span>\", 5000);\n\tvar unclosed = String.Format(\"<div>{0}</div>\", String.Join(\"\", spans));\n\tCrashTest(() => {\n\t\tvar doc = new HtmlAgilityPack.HtmlDocument();\n\t\tdoc.LoadHtml(unclosed);\n\t});\n}\n\n[Test]\npublic void Test_InnerOuter_Does_Not_Stackoverflow_Even_If_The_Dom_Is_Deep() {\n\tvar deep = String.Join(\"\",\n\t\tEnumerable.Repeat(\"<span>\", 5000)\n\t\t\t.Concat(Enumerable.Repeat(\"</span>\", 5000))\n\t);\n\n\tCrashTest(() => {\n\t\tvar doc = new HtmlAgilityPack.HtmlDocument();\n\t\tdoc.LoadHtml(deep);\n\n\t\tvar innner = doc.DocumentNode.InnerText;\n\t\tvar outerHtml = doc.DocumentNode.OuterHtml;\n\t\tvar innerHtml = doc.DocumentNode.InnerHtml;\n\t});\n}\n\n[Test]\npublic void Test_Save_Does_Not_Stackoverflow_Even_If_The_Dom_Is_Deep() { \n\tvar deep = String.Join(\"\",\n\t\tEnumerable.Repeat(\"<div><span>\", 1000)\n\t\t\t.Concat(Enumerable.Repeat(\"</span></div>\", 1000))\n\t);\n\n\tCrashTest(() => {\n\t\tvar doc = new HtmlAgilityPack.HtmlDocument();\n\t\tvar writer = new StringWriter();\n\n\t\tdoc.LoadHtml(deep);\n\t\tdoc.Save(writer);\n\t});\n}\n```",
    "LastUpdatedDate": "2014-03-20T16:28:30.56-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "htmlagilitypack",
    "ReportedDate": "2014-03-20T06:56:39.307-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Recursive algorithms can result in stack overflows",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 35060
  },
  "FileAttachments": [
    {
      "FileId": 13767,
      "FileName": "RecursiveToIterative.diff",
      "DownloadUrl": ".\\13767"
    }
  ],
  "Comments": [
    {
      "Message": "https://htmlagilitypack.codeplex.com/workitem/34382 is related.",
      "PostedDate": "2014-03-20T06:58:10.847-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-03-20T16:28:30.56-07:00",
      "Id": -2147483648
    }
  ]
}