{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-10-03T09:34:48.567-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "HtmlNode.WriteTo() and HtmlNode.WriteContentTo() causes a memory leak not closing the StringStream opened.\n \npublic string WriteTo()\n{\n\tStringWriter sw = new StringWriter();\n\tWriteTo(sw);\n\tsw.Flush();\n\treturn sw.ToString();\n}\n \nShould be\npublic string WriteTo()\n{\n\tStringWriter sw = new StringWriter();\n\tWriteTo(sw);\n\tsw.Flush();\n\tstring s = sw.ToString();\n\tsw.Close();\n\treturn s;\n}\n \nOr better yet, using {} block",
    "LastUpdatedDate": "2013-05-16T05:33:00.78-07:00",
    "PlannedForRelease": "1.4.0 Beta 1",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "htmlagilitypack",
    "ReportedDate": "2007-12-09T16:26:43.243-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Memory Leak for HtmlNode",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 14297
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Does the StringWriter not handle it's own cleanup after it goes out of scope and the garbage cleanup hits it?",
      "PostedDate": "2009-01-11T13:52:04.123-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Yep, the Using block would be the better way. Copying to the s string would just cause more memory to be used.\r\nI'm incorporating a using block in the next release",
      "PostedDate": "2009-10-02T21:40:16.72-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-10-03T09:34:48.567-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:47:27.857-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:33:00.78-07:00",
      "Id": -2147483648
    }
  ]
}