[
  {
    "Id": "527253",
    "ThreadId": "236107",
    "Html": "\r\n<div>I have noticed that the&nbsp;<span style=\"font-family:Consolas,'Courier New',Courier,monospace; white-space:pre\">ConvertTo(HtmlNode node, TextWriter outText)\r\n</span>method in the HtmlToText class is showing the items in a list as a single word.</div>\r\n<div>So i have modified the code a bit and used it, it worked fine for me. I am posting the code that i have modified.\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"color:black\"><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> ConvertTo(HtmlNode node, TextWriter outText)\r\n        {\r\n            <span style=\"color:blue\">string</span> html;\r\n            <span style=\"color:blue\">switch</span> (node.NodeType)\r\n            {\r\n                <span style=\"color:blue\">case</span> HtmlNodeType.Comment:\r\n                    <span style=\"color:green\">// don't output comments</span>\r\n                    <span style=\"color:blue\">break</span>;\r\n\r\n                <span style=\"color:blue\">case</span> HtmlNodeType.Document:\r\n                    ConvertContentTo(node, outText);\r\n                    <span style=\"color:blue\">break</span>;\r\n\r\n                <span style=\"color:blue\">case</span> HtmlNodeType.Text:\r\n                    <span style=\"color:green\">// script and style must not be output</span>\r\n                    <span style=\"color:blue\">string</span> parentName = node.ParentNode.Name;\r\n                    <span style=\"color:blue\">if</span> ((parentName == <span style=\"color:#a31515\">&quot;script&quot;</span>) || (parentName == <span style=\"color:#a31515\">&quot;style&quot;</span>))\r\n                        <span style=\"color:blue\">break</span>;\r\n\r\n                    <span style=\"color:green\">// get text</span>\r\n                    html = ((HtmlTextNode)node).Text;\r\n\r\n                    <span style=\"color:green\">// is it in fact a special closing node output as text?</span>\r\n                    <span style=\"color:blue\">if</span> (HtmlNode.IsOverlappedClosingElement(html))\r\n                        <span style=\"color:blue\">break</span>;\r\n\r\n                    <span style=\"color:green\">// check the text is meaningful and not a bunch of whitespaces</span>\r\n                    <span style=\"color:blue\">if</span> (html.Trim().Length &gt; 0)\r\n                    {\r\n                        outText.Write(HtmlEntity.DeEntitize(html));\r\n                    }\r\n                    <span style=\"color:blue\">break</span>;\r\n\r\n                <span style=\"color:blue\">case</span> HtmlNodeType.Element:\r\n                    <span style=\"color:blue\">switch</span> (node.Name)\r\n                    {\r\n                        <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;p&quot;</span>:\r\n                            <span style=\"color:green\">// treat paragraphs as crlf</span>\r\n                            outText.Write(<span style=\"color:#a31515\">&quot;\\r\\n&quot;</span>);\r\n                            <span style=\"color:blue\">break</span>;\r\n                            <span style=\"color:green\">//</span>\r\n                            <span style=\"color:green\">//code that i added</span>\r\n                            <span style=\"color:green\">//</span>\r\n                        <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;div&quot;</span>:\r\n                            <span style=\"color:green\">// treat div as white space</span>\r\n                            outText.Write(<span style=\"color:#a31515\">&quot; &quot;</span>);\r\n                            <span style=\"color:blue\">break</span>;\r\n                        <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;br&quot;</span>:\r\n                            <span style=\"color:green\">// treat break as crlf</span>\r\n                            outText.Write(<span style=\"color:#a31515\">&quot;\\r\\n&quot;</span>);\r\n                            <span style=\"color:blue\">break</span>;\r\n                        <span style=\"color:blue\">case</span> <span style=\"color:#a31515\">&quot;li&quot;</span>:\r\n                            <span style=\"color:green\">// treat list items as crlf</span>\r\n                            outText.Write(<span style=\"color:#a31515\">&quot;\\r\\n&quot;</span>);\r\n                            <span style=\"color:blue\">break</span>;\r\n                            <span style=\"color:green\">//</span>\r\n                            <span style=\"color:green\">//My addition end here</span>\r\n                            <span style=\"color:green\">//</span>\r\n                    }\r\n\r\n                    <span style=\"color:blue\">if</span> (node.HasChildNodes)\r\n                    {\r\n                        ConvertContentTo(node, outText);\r\n                    }\r\n                    <span style=\"color:blue\">break</span>;\r\n            }\r\n        }\r\n</pre>\r\n<pre style=\"color:black\"><br></pre>\r\n<pre>So if the modofication(even though a small one) helped someone, please let me know</pre>\r\n<pre>If you think i have done anything wrong let me know</pre>\r\n<pre>Thank you</pre>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2010-11-26T00:04:04.793-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]