[
  {
    "Id": "669733",
    "ThreadId": "272075",
    "Html": "\r\n<p>Hello all, this is my first post here. We just recently started using Html Agility.Hopefully I can get some advice. =)</p>\r\n<p>I am extracting html from a html editor on a website and injecting some code into it before saving into Azure storage where the user can then view the site they created. The reason I need to inject some code is because we are giving the user the ability\r\n to put a place holder in the page they create which indicates where they want a web form. When the user saves we parse the html for the place holder tag, if there is one we get the html for that form which includes everything it needs to function and the css\r\n to make it look good. Thats where part of the problem comes in...</p>\r\n<p>When we look at just the form, it looks fine. When it's inserted into the page newly created page the form looks pretty ugly. We took a look at the css in IEs debugger and the exact same css is quite different from the original form to the page with the\r\n form inserted. Both point to the same exact css which should be exactly the same. Further investigation we find things like the doctype is missing and body tag is missing a class etc. When I manually add these back into the page everything works fine.</p>\r\n<p>I've simplified the below code a bit to take out some items unrelated to the problem.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\r\n\t<span style=\"color:blue\">if</span> (there is a placeholder)\r\n\t{\r\n\t\t<span style=\"color:green\">// Set up the needed information the insert the webform into the landing page</span>\r\n\t\tformId = matches[0].Groups[1].Value;\r\n\t\t<span style=\"color:blue\">var</span> repository = <span style=\"color:blue\">new</span> SimpleRepository(AzureUtil.GetSubSonicDataProvider(), SimpleRepositoryOptions.None);\r\n\t\t<span style=\"color:blue\">var</span> clientConnection = Manager.ValidateInstance(<span style=\"color:blue\">this</span>.ClientConnection.Customer.CustomerId, <span style=\"color:blue\">this</span>.ClientConnection.Configuration.ConnectionId);\r\n\t\t<span style=\"color:blue\">var</span> webForm = clientConnection.ValidateWebForm(repository, formId.ToGuid(), <span style=\"color:blue\">true</span>);\r\n\t\t<span style=\"color:blue\">var</span> formHtml = clientConnection.GenerateWebFormHtml(webForm, WebFormHtmlType.Full);\r\n\r\n\t\t<span style=\"color:green\">// Get the form HTML</span>\r\n\t\t<span style=\"color:blue\">var</span> formHtmlDocument = <span style=\"color:blue\">new</span> HtmlDocument();\r\n\t\tformHtmlDocument.LoadHtml(formHtml);\r\n\t\t<span style=\"color:blue\">var</span> formHtmlNode = formHtmlDocument.DocumentNode.SelectSingleNode(<span style=\"color:#a31515\">&quot;/html&quot;</span>);\r\n\t\t<span style=\"color:blue\">if</span> (formHtmlNode == <span style=\"color:blue\">null</span>)\r\n\t\t{\r\n\t\t\tformHtmlNode = formHtmlDocument.CreateElement(<span style=\"color:#a31515\">&quot;html&quot;</span>);\r\n\t\t\tformHtmlDocument.DocumentNode.AppendChild(formHtmlNode);\r\n\t\t}\r\n\t\t<span style=\"color:blue\">var</span> formHeadNode = formHtmlNode.SelectSingleNode(<span style=\"color:#a31515\">&quot;head&quot;</span>);\r\n\t\t<span style=\"color:blue\">if</span> (formHeadNode == <span style=\"color:blue\">null</span>)\r\n\t\t{\r\n\t\t\tformHeadNode = formHtmlDocument.CreateElement(<span style=\"color:#a31515\">&quot;head&quot;</span>);\r\n\t\t\tformHtmlNode.AppendChild(formHeadNode);\r\n\t\t}\r\n\t\t<span style=\"color:blue\">var</span> formBodyNode = formHtmlNode.SelectSingleNode(<span style=\"color:#a31515\">&quot;body&quot;</span>);\r\n\t\t<span style=\"color:blue\">if</span> (formBodyNode == <span style=\"color:blue\">null</span>)\r\n\t\t{\r\n\t\t\tformBodyNode = formHtmlDocument.CreateElement(<span style=\"color:#a31515\">&quot;body&quot;</span>);\r\n\t\t\tformHtmlNode.AppendChild(formBodyNode);\r\n\t\t}\r\n\r\n\t\t<span style=\"color:green\">// Copy nodes into the resulting HTML (such as stylesheets, javascript files, etc.)</span>\r\n\t\t<span style=\"color:blue\">if</span> (!formHeadNode.ChildNodes.IsNullOrEmpty())\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">foreach</span> (HtmlNode sourceHeadChildNode <span style=\"color:blue\">in</span> formHeadNode.ChildNodes.Where(x =&gt; x.NodeType == HtmlNodeType.Element))\r\n\t\t\t{\r\n\t\t\t\t<span style=\"color:blue\">if</span> (sourceHeadChildNode.Name != <span style=\"color:#a31515\">&quot;title&quot;</span>)\r\n\t\t\t\t{\r\n\t\t\t\t\t<span style=\"color:blue\">try</span>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t<span style=\"color:blue\">var</span> destinationNode = PageHtmlDocument.CreateElement(sourceHeadChildNode.Name);\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (sourceHeadChildNode.HasAttributes)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">var</span> attribute <span style=\"color:blue\">in</span> sourceHeadChildNode.Attributes)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdestinationNode.SetAttributeValue(attribute.Name, attribute.Value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (sourceHeadChildNode.InnerText.IsNotEmpty())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdestinationNode.InnerHtml = sourceHeadChildNode.InnerText;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tPageHeadNode.AppendChild(destinationNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span style=\"color:blue\">catch</span> { }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t<span style=\"color:green\">// Replace the placeholder with the appropriate HTML</span>\r\n\t\t<span style=\"color:blue\">var</span> PageHtml = PageHtmlNode.OuterHtml;\r\n\t\tblobHtmlContent = PageHtml.Replace(matches[0].Value, formBodyNode.InnerHtml);\r\n\t}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p>This works perfectly except for the doctype, html tag and body tag. The doctype is dropped completely, the html and body tag lose anything that was included in the tag and so to fix the issue I have to add in these lines.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>blobHtmlContent = <span style=\"color:#a31515\">&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Transitional//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\&quot;&gt;\\n&quot;</span> &#43; blobHtmlContent;\r\nblobHtmlContent = blobHtmlContent.Replace(<span style=\"color:#a31515\">&quot;&lt;html&gt;&quot;</span>, <span style=\"color:#a31515\">&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot;&gt;&quot;</span>);\r\nblobHtmlContent = blobHtmlContent.Replace(<span style=\"color:#a31515\">&quot;&lt;body&gt;&quot;</span>, <span style=\"color:#a31515\">&quot;&lt;body class=\\&quot;noI\\&quot;&gt;&quot;</span>);\r\n</pre>\r\n</div>\r\nThere has to be a better way that I'm unaware of because of my inexperience.\r\n<p></p>\r\n",
    "PostedDate": "2011-09-09T08:39:22.323-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]