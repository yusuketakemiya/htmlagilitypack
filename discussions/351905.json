[
  {
    "Id": "822379",
    "ThreadId": "351905",
    "Html": "<p><span>I am using the htmlagilitypack to parse an xml document. I use it to load the string as a htmldocument and then use the xmltextreader to parse. I will occasionally get an unhandled stackoverflow exception on htmlagility.dll. The specific line is</span></p>\n<p><span>&nbsp;</span></p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">internal</span> Dictionary&lt;<span style=\"color: blue;\">string</span>, Htmlattribute&gt; Hashitems = <span style=\"color: blue;\">new</span> \n                            Dictionary&lt;<span style=\"color: blue;\">string</span>, HtmlAttribute&gt;()\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>In fact there are different stackoverflow exception errors occurring at different lines but the same error and only while using htmlagilitypack. I am in another method trying to parse the xml using xmldocument, xpathnavigator and it works fine unless I get  some bad xml, then I go to this method. I have set up exception catches to just move the bad xml to a folder and then exit this method but I cannot catch these kinds of exceptions or can I?</p>\n<p>Another line where error shows:</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> Name\n{\n   <span style=\"color: blue;\">get</span>\n   {\n     <span style=\"color: blue;\">if</span> (_name == <span style=\"color: blue;\">null</span>)\n     {\n       Name = _ownerdocument.Text.Substring(_namestartindex, _namelength);\n     }\n      <span style=\"color: blue;\">return</span> _name != <span style=\"color: blue;\">null</span> ? _name.ToLower() : <span style=\"color: blue;\">string</span>.Empty;\n</pre>\n</div>\n<p>&nbsp;</p>\n<p><span><span>on the last line in the snippet above in the file HtmlNode.cs. The call stack window shows the top as:</span></span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><span><span>&nbsp;</span></span></p>\n<div style=\"color: black; background-color: white;\">\n<pre>HtmlAgilityPack.dll!HtmlAgilityPack.HtmlNode.Name.<span style=\"color: blue;\">get</span>() Line 432 + 0x21 bytes\n</pre>\n<pre><br /></pre>\n<pre><br /></pre>\n<pre><br /></pre>\n<pre><br /></pre>\n<pre><br /></pre>\n<pre><br /></pre>\n<pre>My code sample</pre>\n<pre><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">Try</span>\n            <span style=\"color: blue;\">Dim</span> hdoc = <span style=\"color: blue;\">New</span> HtmlAgilityPack.HtmlDocument()\n            hdoc.LoadHtml(xmlsnippet)\n            <span style=\"color: blue;\">Dim</span> nreader <span style=\"color: blue;\">As</span> XmlTextReader = <span style=\"color: blue;\">New</span> \n                         XmlTextReader(<span style=\"color: blue;\">New</span> StringReader(xmlsnippet))\n            <span style=\"color: blue;\">Dim</span> ncount <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">Integer</span> = 0\n\n            <span style=\"color: blue;\">While</span> nreader.Read\n                <span style=\"color: blue;\">If</span> <span style=\"color: blue;\">Not</span> nreader.Name = <span style=\"color: #a31515;\">\"\"</span> <span style=\"color: blue;\">Then</span>\n                    ncount += 1\n                    <span style=\"color: blue;\">If</span> ncount = 18 <span style=\"color: blue;\">Then</span>\n                        <span style=\"color: blue;\">Exit</span> <span style=\"color: blue;\">While</span>\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    num += 1\n                    nodelist.Add(nreader.Name)\n                    <span style=\"color: blue;\">If</span> nreader.Name = <span style=\"color: #a31515;\">\"id\"</span> <span style=\"color: blue;\">Then</span>\n                        statid = nreader.ReadInnerXml\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    <span style=\"color: blue;\">If</span> nreader.Name = <span style=\"color: #a31515;\">\"published\"</span> <span style=\"color: blue;\">Then</span>\n                        contentDate = nreader.ReadInnerXml\n                        contentDate = Regex.Replace(contentDate, <span style=\"color: #a31515;\">\"T\"</span>, <span style=\"color: #a31515;\">\" \"</span>)\n                        contentDate = Regex.Replace(contentDate, <span style=\"color: #a31515;\">\"\\+\"</span>, <span style=\"color: #a31515;\">\" \"</span>)\n                        contentDate = contentDate.Replace(<span style=\"color: #a31515;\">\"Z\"</span>, <span style=\"color: #a31515;\">\"\"</span>)\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    <span style=\"color: blue;\">If</span> nreader.Name = <span style=\"color: #a31515;\">\"summary\"</span> <span style=\"color: blue;\">Then</span>\n                        ctext = nreader.ReadInnerXml\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    <span style=\"color: blue;\">If</span> nreader.Name = <span style=\"color: #a31515;\">\"title\"</span> <span style=\"color: blue;\">Then</span>\n                        csubject = nreader.ReadInnerXml\n                        <span style=\"color: blue;\">If</span> csubject.Contains(<span style=\"color: #a31515;\">\"posted\"</span>) <span style=\"color: blue;\">Then</span>\n                            template = csubject\n                            author = Regex.Replace(template, <span style=\"color: #a31515;\">\"posted.*\"</span>, <span style=\"color: #a31515;\">\"\"</span>)\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">If</span> csubject.Contains(<span style=\"color: #a31515;\">\"Keyword -\"</span>) <span style=\"color: blue;\">Then</span>\n                          <span style=\"color: blue;\">Dim</span> tip <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">String</span> = csubject\n                            searchterm = \n                            Regex.Replace(csubject, <span style=\"color: #a31515;\">\"xxxxxx.*xxxxxx.*xxxx.*-\"</span>, <span style=\"color: #a31515;\">\"\"</span>)\n                            searchterm = \n                           Regex.Replace(searchterm, <span style=\"color: #a31515;\">\"xxxxx.*xxxxxx.*Search.*-\"</span>, <span style=\"color: #a31515;\">\"\"</span>)\n                            Trim(searchterm)\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n            <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">While</span>\n\n            <span style=\"color: blue;\">Dim</span> mreader <span style=\"color: blue;\">As</span> XmlTextReader = \n                        <span style=\"color: blue;\">New</span> XmlTextReader(<span style=\"color: blue;\">New</span> StringReader(xmlsnippet))\n            <span style=\"color: blue;\">Dim</span> mcount <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">Integer</span> = 0\n\n            <span style=\"color: blue;\">While</span> mreader.Read\n                <span style=\"color: blue;\">If</span> <span style=\"color: blue;\">Not</span> mreader.Name = <span style=\"color: #a31515;\">\"\"</span> <span style=\"color: blue;\">Then</span>\n                    mcount += 1\n                    <span style=\"color: blue;\">If</span> mcount &gt; 15 <span style=\"color: blue;\">Then</span>\n                        <span style=\"color: blue;\">If</span> mreader.Name = <span style=\"color: #a31515;\">\"uri\"</span> <span style=\"color: blue;\">Then</span>\n                            authorUri = mreader.ReadInnerXml\n                            Trim(authorUri)\n                            <span style=\"color: blue;\">If</span> authorUri = <span style=\"color: #a31515;\">\"http://www.xxxxxxxx.com/\"</span> <span style=\"color: blue;\">Then</span>\n                                authorUri = <span style=\"color: #a31515;\">\"\"</span>\n                            <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">If</span> mreader.Name = <span style=\"color: #a31515;\">\"name\"</span> <span style=\"color: blue;\">Then</span>\n                            author = mreader.ReadInnerXml\n                            <span style=\"color: blue;\">If</span> author = <span style=\"color: #a31515;\">\"xxxxxx\"</span> <span style=\"color: blue;\">Then</span>\n                                author = <span style=\"color: #a31515;\">\"\"</span>\n                            <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">If</span> mreader.Name = <span style=\"color: #a31515;\">\"content\"</span> <span style=\"color: blue;\">Then</span>\n                            htext = mreader.ReadInnerXml\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">If</span> mreader.Name = <span style=\"color: #a31515;\">\"link\"</span> <span style=\"color: blue;\">Then</span>\n                            <span style=\"color: blue;\">Dim</span> address <span style=\"color: blue;\">As</span> <span style=\"color: blue;\">String</span>\n                            address = mreader.ReadOuterXml\n                            <span style=\"color: blue;\">If</span> address.Contains(<span style=\"color: #a31515;\">\"related\"</span>) <span style=\"color: blue;\">Then</span>\n                                <span style=\"color: blue;\">Dim</span> regex12 <span style=\"color: blue;\">As</span> Regex =\n            <span style=\"color: blue;\">New</span> Regex(<span style=\"color: #a31515;\">\"&lt;link.*rel.*href=\"\"(?&lt;Link&gt;.*?)\"\".*/&gt;\"</span>, RegexOptions.IgnoreCase)\n                                <span style=\"color: blue;\">Dim</span> m12 <span style=\"color: blue;\">As</span> Match = regex12.Match(address)\n                                himage = m12.Groups(<span style=\"color: #a31515;\">\"Link\"</span>).Value\n                            <span style=\"color: blue;\">ElseIf</span> address.Contains(<span style=\"color: #a31515;\">\"alternate\"</span>) <span style=\"color: blue;\">Then</span>\n                                <span style=\"color: blue;\">Dim</span> regex13 <span style=\"color: blue;\">As</span> Regex = \n           <span style=\"color: blue;\">New</span> Regex(<span style=\"color: #a31515;\">\"&lt;link.*rel.*href=\"\"(?&lt;Link&gt;.*?)\"\".*/&gt;\"</span>, RegexOptions.IgnoreCase)\n                                <span style=\"color: blue;\">Dim</span> m13 <span style=\"color: blue;\">As</span> Match = regex13.Match(address)\n                                authorUri = m13.Groups(<span style=\"color: #a31515;\">\"Link\"</span>).Value\n                            <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                        <span style=\"color: blue;\">If</span> mreader.Name = <span style=\"color: #a31515;\">\"subtitle\"</span> <span style=\"color: blue;\">Then</span>\n                            hsubtitle = mreader.ReadInnerXml\n                        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                    <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n                <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">If</span>\n            <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">While</span>\n\n        <span style=\"color: blue;\">Catch</span> ex <span style=\"color: blue;\">As</span> Exception\n            appLogs.constructLog(ex.Message.ToString, <span style=\"color: blue;\">True</span>, <span style=\"color: blue;\">True</span>)\n            <span style=\"color: blue;\">Exit</span> <span style=\"color: blue;\">Sub</span>\n        <span style=\"color: blue;\">End</span> <span style=\"color: blue;\">Try</span>\n</pre>\n</div>\n<br /></pre>\n</div>\n<p>&nbsp;</p>",
    "PostedDate": "2012-04-11T06:32:19.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "873374",
    "ThreadId": "351905",
    "Html": "<p>Did you find an answer for this?</p>",
    "PostedDate": "2012-07-18T05:24:11.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]