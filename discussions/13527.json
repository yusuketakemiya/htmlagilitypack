[
  {
    "Id": "44107",
    "ThreadId": "13527",
    "Html": "\r\nHello,<br />I created an XPath property for the HtmlNode Class.  This will return the absolute XPath for the current node.  I did this as a replacement to my previous post <a href=\"http://www.codeplex.com/htmlagilitypack/Thread/View.aspx?ThreadId=13171\" class=\"externalLink\">http://www.codeplex.com/htmlagilitypack/Thread/View.aspx?ThreadId=13171<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a>, since the XPath is more accurate.<br /><br />Add to the HtmlNode Class:<br /><br />        internal string _xpath; //2007.08.07.1202.AFG<br /><br />        /// &lt;summary&gt;<br />        /// Gets the XPath of the current HTML node.<br />        /// &lt;/summary&gt;<br />        /// &lt;revisions&gt;<br />        /// 2007.08.07.1233.AFG - Added XPath property to node<br />        /// &lt;/revisions&gt;<br />        public string XPath<br />        {<br />            get<br />            {<br />                if (_xpath == null)<br />                    _xpath = BuildXPath(this);<br />                return _xpath;<br />            }<br />        }<br /><br />        /// &lt;summary&gt;<br />        /// Builds the XPath property for the node<br />        /// &lt;/summary&gt;<br />        /// &lt;param name=\"node\"&gt;HtmlNode: The node to find the XPath.&lt;/param&gt;<br />        /// &lt;returns&gt;String: The current node's XPath.&lt;/returns&gt;<br />        /// &lt;revisions&gt;<br />        /// 2007.08.07.1229.AFG - created<br />        /// &lt;/revisions&gt;<br />        internal String BuildXPath(HtmlNode node)<br />        {<br />            string xPath = \"\";<br />            HtmlNode parent = node;<br />            do<br />            {<br />                if (parent.Name.IndexOf(\"#\") &lt; 0)<br />                    xPath = string.Concat(\"/\", parent.Name, XPathNodePosition(parent), xPath);<br />                parent = parent.ParentNode;<br />            }<br />            while (parent != null);<br />            return xPath;<br />        }<br /><br />        /// &lt;summary&gt;<br />        /// Builds the XPath String for the Node position<br />        /// &lt;/summary&gt;<br />        /// &lt;param name=\"node\"&gt;HtmlNode: The node to find the position.&lt;/param&gt;<br />        /// &lt;returns&gt;String: The node's position among it's siblings in XPath notation.&lt;/returns&gt;<br />        /// &lt;revisions&gt;<br />        /// 2007.08.07.1225.AFG - created<br />        /// &lt;/revisions&gt;<br />        internal string XPathNodePosition(HtmlNode node)<br />        {<br />            if (node.Name == \"html\" || node.Name == \"head\" || node.Name == \"body\")<br />                return string.Empty;<br />            else<br />                return string.Concat(\"[\", FindNodePosition(node).ToString(), \"]\");<br />        }<br /><br />        /// &lt;summary&gt;<br />        /// Get the nodes sibling position.<br />        /// &lt;/summary&gt;<br />        /// &lt;param name=\"node\"&gt;HtmlNode: The node to find the position.&lt;/param&gt;<br />        /// &lt;returns&gt;Int: The node's position among it's siblings. The first node is counted as position 1.&lt;/returns&gt;<br />        /// &lt;revisions&gt;<br />        /// 2007.08.07.1223.AFG - created<br />        /// &lt;/revisions&gt;<br />        internal int FindNodePosition(HtmlNode node)<br />        {<br />            HtmlNode sibling = node;<br />            int pos = 0;<br />            do<br />            {<br />                if (sibling.Name == node.Name)<br />                    pos += 1;<br />                sibling = sibling.PreviousSibling;<br />            }<br />            while (sibling != null);<br />            return pos;<br />        }<br />",
    "PostedDate": "2007-08-07T14:19:14.317-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "46114",
    "ThreadId": "13527",
    "Html": "\r\nRan into some problems with the BuildXPathProcedure, so I altered the code a little to make it more accurate:<br /><br />        /// &lt;summary&gt;<br />        /// Builds the XPath property for the node<br />        /// &lt;/summary&gt;<br />        /// &lt;param name=\"node\"&gt;HtmlNode: The node to find the XPath.&lt;/param&gt;<br />        /// &lt;returns&gt;String: The current node's XPath.&lt;/returns&gt;<br />        /// &lt;revisions&gt;<br />        /// 2007.08.07.1229.AFG - created<br />        /// 2007.08.07.1411.AFG - Changed the innerloop condition for setting the Xpath<br />        ///                       Search for the parent node by checking that it is an element<br />        ///                       node type, to avoid newline and tab characters that are read as nodes.<br />        /// &lt;/revisions&gt;<br />        internal String BuildXPath(HtmlNode node)<br />        {<br />            string xPath = \"\";<br />            HtmlNode parent = node;<br />            do<br />            {<br />                if (parent.NodeType == HtmlNodeType.Element) //2007.08.22.1411.AFG - changed from: if (parent.Name.IndexOf(\"#\") &lt; 0)<br />                    xPath = string.Concat(\"/\", parent.Name, XPathNodePosition(parent), xPath);<br />                parent = parent.ParentNode;<br />            }<br />            while (parent != null);<br />            return xPath;<br />        }<br />",
    "PostedDate": "2007-08-22T11:21:56.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "57693",
    "ThreadId": "13527",
    "Html": "\r\nHmm... interesting.  Very good work Eclipse!  I've incorporated this into my copy of the Agility Pack since this is exactly something I needed to do (search for a node by inner text).<br /><br />Question on use - would I simply iterate over the nodes and look at their XPath property to match my text?  I'm a little new to XPath queries so I'm not entirely clear on how they can be used to search for a node's inner html.<br /><br />Thanks!<br />",
    "PostedDate": "2007-11-10T12:31:49.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]