[
  {
    "Id": "38774",
    "ThreadId": "11945",
    "Html": "\r\nusing System.IO;<br />using HtmlAgilityPack;<br /><br />\tclass MainClass {<br />\t\tpublic static void Main(string[] args) {<br />\t\t\tHtmlDocument doc = new HtmlDocument();<br />\t\t\tStringReader st = new StringReader( \"&lt;html&gt;&lt;select id=\\\"s1\\\"&gt;&lt;option value=\\\"1\\\"&gt;1&lt;/option&gt;&lt;option value=\\\"2\\\"&gt;2&lt;/option&gt;&lt;/select&gt;&lt;select id=\\\"s2\\\"&gt;&lt;option value=\\\"3\\\"&gt;3&lt;/option&gt;&lt;option value=\\\"4\\\"&gt;4&lt;/option&gt;&lt;/select&gt;&lt;/html&gt;\");<br />\t\t\tdoc.Load( st );<br />\t        HtmlNodeCollection options = doc.DocumentNode.SelectNodes(\"//option[@value]\");<br />        \tSystem.Console.WriteLine( \"Listing options for document\" );<br />            foreach (HtmlNode option in options) {<br />            \tSystem.Console.WriteLine( \"option value {0}\", option.Attributes[\"value\"].Value );<br />            }<br />\t\t\tHtmlNode node = doc.DocumentNode.SelectSingleNode(\"//select[@id=\\\"s1\\\"]\");\t\t\t<br />\t        options = node.SelectNodes(\"//option[@value]\");<br />        \tSystem.Console.WriteLine( \"Listing options for {0}\", node.Attributes[\"id\"].Value );<br />            foreach (HtmlNode option in options) {<br />            \tSystem.Console.WriteLine( \"option value {0}\", option.Attributes[\"value\"].Value );<br />            }<br />\t\t\tnode = doc.DocumentNode.SelectSingleNode(\"//select[@id=\\\"s2\\\"]\");\t\t\t<br />\t        options = node.SelectNodes(\"//option[@value]\");<br />        \tSystem.Console.WriteLine( \"Listing options for {0}\", node.Attributes[\"id\"].Value );<br />            foreach (HtmlNode option in options) {<br />            \tSystem.Console.WriteLine( \"option value {0}\", option.Attributes[\"value\"].Value );<br />            }<br />\t\t}<br />\t}<br /><br />When using the preceding code, the result is :<br /><br /><i>Listing options for document</i><br /><i>option value 1</i><br /><i>option value 2</i><br /><i>option value 3</i><br /><i>option value 4</i><br /><i>Listing options for s1</i><br /><i>option value 1</i><br /><i>option value 2</i><br /><i>option value 3</i><br /><i>option value 4</i><br /><i>Listing options for s2</i><br /><i>option value 1</i><br /><i>option value 2</i><br /><i>option value 3</i><br /><i>option value 4</i><br /><br />Instead, it should be :<br /><br /><i>Listing options for document</i><br /><i>option value 1</i><br /><i>option value 2</i><br /><i>option value 3</i><br /><i>option value 4</i><br /><i>Listing options for s1</i><br /><i>option value 1</i><br /><i>option value 2</i><br /><i>Listing options for s2</i><br /><i>option value 3</i><br /><i>option value 4</i><br /><br />The main reason for this problem seems that, when calling HtmlNodeNavigator(HtmlDocument doc, HtmlNode currentNode), something (I think) in the Base class XPathNavigator calls MoveToRoot.<br />And MoveToRoot goes to the root of the document. So we loose the \"currentNode\".<br /><br />I modified HtmlNodeNavigator.cs the following way :<br /><br />@@ -16,6 +16,7 @@<br /> \t{<br /> \t\tprivate HtmlDocument _doc = new HtmlDocument();<br /> \t\tprivate HtmlNode _currentnode;<br />+\t\tprivate HtmlNode _originalposition = null;<br /> \t\tprivate int _attindex;<br /> \t\tprivate HtmlNameTable _nametable = new HtmlNameTable();<br /><br />@@ -30,6 +31,9 @@<br /> \t\t{<br /> \t\t\tInternalTrace(null);<br /> \t\t\t_currentnode = _doc.DocumentNode;<br />+\t\t\tif( _originalposition != null ) {<br />+\t\t\t\t_currentnode = _originalposition;<br />+\t\t\t}<br /> \t\t\t_attindex = -1;<br /> \t\t}<br /><br />@@ -88,6 +92,7 @@<br /><br /> \t\tinternal HtmlNodeNavigator(HtmlDocument doc, HtmlNode currentNode)<br /> \t\t{<br />+\t\t\t_originalposition = currentNode;<br /> \t\t\tif (currentNode == null)<br /> \t\t\t{<br /> \t\t\t\tthrow new ArgumentNullException(\"currentNode\");<br />@@ -115,6 +120,7 @@<br /> \t\t\t_currentnode = nav._currentnode;<br /> \t\t\t_attindex = nav._attindex;<br /> \t\t\t_nametable = nav._nametable; // REVIEW: should we do this?<br />+\t\t\t_originalposition = nav._originalposition;<br /> \t\t}<br /><br /> \t\t/// &lt;summary&gt;<br />@@ -542,7 +548,11 @@<br /> \t\t/// &lt;/summary&gt;<br /> \t\tpublic override void MoveToRoot()<br /> \t\t{<br />+\t\t\tif( _originalposition == null ) {<br /> \t\t\t_currentnode = _doc.DocumentNode;<br />+\t\t\t} else {<br />+\t\t\t\t_currentnode = _originalposition;<br />+\t\t\t}<br /> \t\t\tInternalTrace(null);<br /> \t\t}<br /><br /><br />And it indeed corrects the problem. However I've not tested any side effect.<br /><br />Can other people have a look to this patch ?<br /><br />Thanks,<br /><br />Ludovic.<br />",
    "PostedDate": "2007-06-28T02:15:19.437-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "41452",
    "ThreadId": "11945",
    "Html": "\r\nI'd say that there is no bug here, only a flawed Xpath query.  Any Xpath query beginning with \"/\" (and \"//\" by extension) will select all matching descendants of the <b>document</b> node, <i>regardless of context</i>.  See <a href=\"http://www.w3.org/TR/xpath#path-abbrev\" class=\"externalLink\">http://www.w3.org/TR/xpath#path-abbrev<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a>.<br /><br />In order to get your desired output in your examples, instead of doing <br />node.SelectNodes(\"//option[@value]\")<br />you should do one of the following (currently working) alternatives:<br />node.SelectNodes(\"option[@value]\")<br /> - or -<br />node.SelectNodes(\".//option[@value]\")<br />",
    "PostedDate": "2007-07-17T14:16:26.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "41517",
    "ThreadId": "11945",
    "Html": "\r\nXenolinguist,<br /><br />You're perfectly right. My query was wrong. So the patch was not the right way to go.<br /><br />Thank you for your help !<br /><br />Ludovic<br />",
    "PostedDate": "2007-07-18T01:13:16.053-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]