[
  {
    "Id": "149661",
    "ThreadId": "44915",
    "Html": "<div><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px\">\r\n<p>When web scraping html page with multiple form elements and form is specified in the path, agility pack returned the form elements thatdoes not contain anything at all though the in html form has valid content inside. </p>\r\n<p>   For example , for xPath =<span style=\"font-size:13px;color:#a31515\">&quot;//table[@class='pageBotBlock']//<span style=\"color:#ff0000\">form</span>&quot;</span><span style=\"font-size:13px\">;</span> SelectNodes returns form element with no children.  </p>\r\n<p>For xPath =<span style=\"font-size:13px;color:#a31515\">&quot;//table[@class='pageBotBlock']//<span style=\"color:#ff0000;background-color:#ffffff\">form</span>/table&quot; it also <span style=\"color:#0000ff\">didn't find any elements.</span></span> </p>\r\n<p><span style=\"color:#0000ff\">The interesting to note that if I exclude &quot;<span style=\"color:#ff0000\">form</span>&quot; from xpath, the SelectNodes will return elements, that are actually children of &quot;form&quot;, e.g. </span>xPath =<span style=\"font-size:13px;color:#a31515\">&quot;//table[@class='pageBotBlock']//table&quot;  <span style=\"color:#0000ff\">returns back expected results.</span></span> </p>\r\n<p> In debugger I was able to find that in <span style=\"color:#2b91af\">HtmlNode.</span>SelectNodes the form element losts the children when <span style=\"color:#2b91af\">XPathNodeIterator.Current casts to </span><span style=\"font-size:13px\"> <span style=\"color:#2b91af\">HtmlNodeNavigator</span><span style=\"font-size:13px\"> , and then <span style=\"color:#2b91af\">HtmlNodeNavigator</span>.CurrentNode is accessed</span></span></p>\r\n<p> </p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeCollection</span><span style=\"font-size:13px\"> SelectNodes(</span><span style=\"font-size:13px;color:#0000ff\">string</span><span style=\"font-size:13px\"> xpath)</span> <br>\r\n<span style=\"font-size:13px\">{ <br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeCollection</span><span style=\"font-size:13px\"> list = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeCollection</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">);</span> <br>\r\n<span style=\"font-size:13px;color:#2b91af\">HtmlNodeNavigator</span><span style=\"font-size:13px\"> nav = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeNavigator</span><span style=\"font-size:13px\">(_ownerdocument, </span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">);</span> <br>\r\n<span style=\"font-size:13px;color:#2b91af\">XPathNodeIterator</span><span style=\"font-size:13px\"> it = nav.Select(xpath);</span> <br>\r\n<span style=\"font-size:13px;color:#0000ff\">while</span><span style=\"font-size:13px\"> (it.MoveNext())</span> <br>\r\n<span style=\"font-size:13px\">{ <br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeNavigator</span><span style=\"font-size:13px\"> n = (</span><span style=\"font-size:13px;color:#2b91af\">HtmlNodeNavigator</span><span style=\"font-size:13px\">)it.Current<span style=\"color:#00ff00\">;//form with children</span>    </span> <br>\r\n<span style=\"font-size:13px\">list.Add(n.CurrentNode);//<span style=\"color:#ff0000\">form has no children??</span> <br>\r\n} <br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> list;</span> <br>\r\n<span style=\"font-size:13px\">}\r\n<p>&nbsp;</p>\r\n<div></div>\r\n</span></p>\r\n</div>\r\n<div>I've asked Tommi Laukkanen, who posted about  the same problem on <a href=\"http://www.codeplex.com/htmlagilitypack/wiki/comments/archive/view?title=Home&page=1\"><span style=\"color:#810081\">http://www.codeplex.com/htmlagilitypack/wiki/comments/archive/view?title=Home&amp;page=1</span></a> , but  he was not able to use html agility pack because of mal formed html tags.  </div>\r\n<div>\r\n<p>Fortunately for me, I was able to specify xpath without mentioning &quot;<span style=\"color:#ff0000\">form</span>&quot; .<br>\r\nHowever it will be good if someone will be able to explain/resolve this behavior.</p>\r\n</div>\r\n",
    "PostedDate": "2009-01-22T03:04:13.467-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "419429",
    "ThreadId": "44915",
    "Html": "<p>I think I can explain this a bit, if anyone is still wondering about this. I was searching the internet for why I couldn't seem to remove form elements from a page.</p>\r\n<p>I first came across <a href=\"http://www.fremus.co.za/blog/2009/12/interesting-code-with-htmlagilitypack/\">http://www.fremus.co.za/blog/2009/12/interesting-code-with-htmlagilitypack/</a>&nbsp;which explains about text nodes, and then I found this.</p>\r\n<p>I had a similar issue in that doc.DocumentNode.SelectNodes(&quot;//body//form//input&quot;) was turning up null. Using this small script I was able to determine that while the form element shows up as an element, it is not a container.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">foreach</span> (HtmlNode node <span style=\"color:Blue\">in</span> bodynode.ChildNodes)\r\n{\r\n    Console.WriteLine(node.Name);\r\n    <span style=\"color:Blue\">foreach</span> (HtmlNode childNode <span style=\"color:Blue\">in</span> node.ChildNodes)\r\n    {\r\n        Console.WriteLine(<span style=\"color:#A31515\">&quot;\\t&quot;</span> + childNode.Name);\r\n        <span style=\"color:Blue\">if</span> (childNode.Name == <span style=\"color:#A31515\">&quot;#text&quot;</span>) Console.WriteLine(<span style=\"color:#A31515\">&quot;\\t\\t&quot;</span> + childNode.InnerText);\r\n        <span style=\"color:Blue\">foreach</span> (HtmlNode grandChildNode <span style=\"color:Blue\">in</span> childNode.ChildNodes)\r\n        {\r\n            Console.WriteLine(<span style=\"color:#A31515\">&quot;\\t\\t\\t&quot;</span> + grandChildNode.Name);\r\n            <span style=\"color:Blue\">if</span> (grandChildNode.Name == <span style=\"color:#A31515\">&quot;#text&quot;</span>) Console.WriteLine(<span style=\"color:#A31515\">&quot;\\t\\t\\t\\t&quot;</span> + grandChildNode.InnerText);\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>Results in this output:</p>\r\n<p>#text<br>#text<br>#text<br>#text<br>#text<br>#text<br>#text<br>#text<br>#text<br>div<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; div<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; form<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; div<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/form&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #text</p>\r\n<p>&nbsp;</p>\r\n<p><br>#text</p>\r\n<p>The HTML that was used to generate this output started with:</p>\r\n<p>&lt;div id=&quot;container&quot;&gt;<br>&nbsp; &lt;div id=&quot;content&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &lt;form name=&quot;aspnetForm&quot; ...&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;h1&gt;</p>\r\n<p>You can see that the &lt;form&gt; entry IS AN ELEMENT, but not a container. I am currently looking for an XPath method of finding #text elements but I havn't gotten there yet. I keep getting an&nbsp;error&nbsp;when trying the XPath.&nbsp;I'll probably just have to enumerate ChildNodes to find a #text element who's InnerHtml contains &lt;/form&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>-J</p>",
    "PostedDate": "2010-03-17T14:27:02.827-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "419439",
    "ThreadId": "44915",
    "Html": "<p>This has been re-iterated many times on the discussion forum and issues tracker. By default the form tag is not a container due to it being allowed to be placed in and outside of other containers per HTML 3. There is an option to change this behavior.</p>\r\n<p>In the HtmlNode contstructor there is a list of defaults. If you remove this line</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>ElementsFlags.Add(<span style=\"color:#A31515\">&quot;form&quot;</span>, HtmlElementFlag.CanOverlap | HtmlElementFlag.Empty);\r\n</pre>\r\n</div>\r\nIt will behave as expected. The plan is for the next release to make these defaults more up to the times. Also easier ways of overriding these values. You can pass in your own collection when creating the html document.</p>",
    "PostedDate": "2010-03-17T14:47:26.597-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]